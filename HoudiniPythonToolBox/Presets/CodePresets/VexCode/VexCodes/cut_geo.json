{"tag": ["geometry", "root"], "info": "function int[] nextneis(int prs[]){\n    int newneis[]={};\n    foreach(int pr;prs)\n    {\n        int neis[] = neighbours(0,pr);\n        foreach(int nei;neis)\n        {\n            if(find(prs,nei)<0&&find(newneis,nei)<0)\n            {\n                append(newneis,nei);\n            }\n        }\n    \n    }\n    return newneis;\n}\n\n\n\n\nint num = chi('num');\nint maxnum = chi('maxfaces');\nint all[]= expandpointgroup(0,'');\nint set[] = {};\n\nint neisnum;\n\nfor(int i =0;i<num;i++)\n{\n    int order[] ={};\n    \n    int currentset[] = {};\n    int currentpr = all[0];\n    append(currentset,currentpr);\n    append(set,currentpr);\n    \n    while(len(currentset)<maxnum)\n    {\n        int polyneis[] = nextneis(currentset);\n        int newpolyneis[]={};\n        float rand[] = {};\n        foreach(int index;int nei;polyneis)\n        {\n            if(find(set,nei)<0)\n            {\n                append(newpolyneis,nei);\n                append(rand,rand(index+i+chf('seed')));\n            }\n        \n        }\n        int helppolys[] = newpolyneis;\n        float helprand[] = rand;\n        if(len(currentset)==3)\n        {\n\n            int s[] = {0,1,2};\n            vector pos0 = point(0,'P',currentset[0]);\n            vector pos1 = point(0,'P',currentset[1]);\n            vector pos2 = point(0,'P',currentset[2]);\n            vector dir0 = normalize(pos0-pos1);\n            vector dir1 = normalize(pos1-pos2);\n            \n            if(abs(1-abs(dot(dir0,dir1)))>0.01)\n            {\n                vector dir2 = cross(dir0,dir1);\n                float xyz[] = array(abs(dir2.x),abs(dir2.y),abs(dir2.z));\n                int xyzorder[] = argsort(xyz);\n                s = reorder(s,xyzorder);\n                int index = s[-1];\n\n                foreach(int myindex;int nei;helppolys)\n                {\n                    vector polyp = point(0,'P',nei);\n                    if(abs(polyp[index]-pos0[index])>0.01)\n                    {\n                        removevalue(newpolyneis,nei);\n                        removevalue(rand,helprand[myindex]);\n                        \n                    }\n                }\n            }\n            \n        }\n        if(len(newpolyneis)>0)\n        {\n            order = argsort(rand);\n            newpolyneis = reorder(newpolyneis,order);\n            append(currentset,newpolyneis[0]);\n            append(set,newpolyneis[0]);\n            //removevalue(all,newpolyneis[0]);\n            //printf('%d',set);\n            \n        }else\n        {\n            break;\n        }\n        \n        \n    \n    }\n    \n    //printf('%d',currentset);\n    foreach(int current;currentset)\n    {\n        setpointattrib(0,'id',current,i+1);\n        removevalue(all,current);\n    }\n    if(len(all)==0)\n    {\n        break;\n    }\n    \n\n}"}